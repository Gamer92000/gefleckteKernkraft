name: Android APK CI

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
    types: [opened, reopened, synchronize, edited]

env:
  PNPM_VERSION: 10
  NODE_VERSION: 20
  JDK_VERSION: 17
  ANDROID_BUILD_TOOLS_VERSION: 36.0.0

jobs:
  build:
    environment: |
      ${{ github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') && 'Release' || 'Development') || '' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install JS dependencies
        run: pnpm install

      - name: Build Lynx bundle
        run: pnpm run build

      - name: Copy Lynx bundle to Android assets
        run: |
          mkdir -p app/src/main/assets
          cp dist/main.lynx.bundle app/wear/src/main/assets/
          cp dist/main.lynx.bundle app/mobile/src/main/assets/

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_VERSION }}
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build APKs
        run: ./gradlew :app:assembleRelease

      - name: Sign wear APK
        if: github.event_name != 'pull_request'
        uses: ilharp/sign-android-release@v2
        id: sign_wear_apk
        with:
          releaseDir: app/wear/build/outputs/apk/release
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }} # see https://github.com/ilharp/sign-android-release
          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: ${{ env.ANDROID_BUILD_TOOLS_VERSION }}

      - name: Sign mobile APK
        if: github.event_name != 'pull_request'
        uses: ilharp/sign-android-release@v2
        id: sign_mobile_apk
        with:
          releaseDir: app/mobile/build/outputs/apk/release
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }} # see https://github.com/ilharp/sign-android-release
          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: ${{ env.ANDROID_BUILD_TOOLS_VERSION }}

      - name: Fix APK name # signing tool does funky things
        if: github.event_name != 'pull_request'
        run: |
          mkdir release
          cp ${{ steps.sign_wear_apk.outputs.signedFile }} release/wear-release.apk
          cp ${{ steps.sign_mobile_apk.outputs.signedFile }} release/mobile-release.apk

      - name: Dummy signing
        if: github.event_name == 'pull_request'
        run: |
          mkdir release
          cp app/wear/build/outputs/apk/release/wear-release-unsigned.apk release/wear-release.apk
          cp app/mobile/build/outputs/apk/release/mobile-release-unsigned.apk release/mobile-release.apk

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            release/wear-release.apk
            release/mobile-release.apk
          name: app-release-apk

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/wear-release.apk
            artifacts/mobile-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
